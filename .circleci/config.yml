version: 2.1

jobs:
  ubuntu_build:
    description: A template for running liboqs-java tests on the OQS x64 Ubuntu Bionic Docker VM
    docker:
      - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Clone liboqs
          command: git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git
      - run:
          name: Build liboqs
          command: mkdir build && cd build && cmake .. -G"Ninja" -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON && ninja install
          working_directory: liboqs
      - run:
          name: Resolve all maven project dependencies
          command: mvn dependency:go-offline
      - run:
          name: Build liboqs-java and run tests
          command: export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib" && mvn package
      - run:
          name: Compile KEM, Signatures and Rand examples
          command: >
            javac -cp target/liboqs-java.jar examples/KEMExample.java &&
            javac -cp target/liboqs-java.jar examples/SigExample.java &&
            javac -cp target/liboqs-java.jar examples/RandExample.java
      - run:
          name: Run KEM, Signatures and Rand examples
          command: >
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib" &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ KEMExample &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ SigExample &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ RandExample

  openjdk-11:
    description: A template for running liboqs-java tests on the CircleCI OpenJDK VM
    docker:
      - image: cimg/openjdk:11.0.9
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Install dependencies to build liboqs
          command: sudo apt update -qq && sudo apt install cmake build-essential ninja-build libssl-dev
      - run:
          name: Clone liboqs
          command: git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git
      - run:
          name: Build liboqs
          command: mkdir build && cd build && cmake .. -G"Ninja" -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON && sudo ninja install
          working_directory: liboqs
      - run:
          name: Resolve all maven project dependencies
          command: mvn dependency:go-offline
      - run:
          name: Build liboqs-java and run tests
          command: export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib" && mvn package
      - run:
          name: Compile KEM, Signatures and Rand examples
          command: >
            javac -cp target/liboqs-java.jar examples/KEMExample.java &&
            javac -cp target/liboqs-java.jar examples/SigExample.java &&
            javac -cp target/liboqs-java.jar examples/RandExample.java
      - run:
          name: Run KEM, Signatures and Rand examples
          command: >
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib" &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ KEMExample &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ SigExample &&
            java -Djava.library.path=target/ -cp target/liboqs-java.jar:examples/ RandExample

workflows:
  version: 2.1
  build:
    jobs:
      - ubuntu_build:
          name: ubuntu-build
          context: openquantumsafe
      - openjdk-11:
          name: openjdk-11
          context: openquantumsafe
